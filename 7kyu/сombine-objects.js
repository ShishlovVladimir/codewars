// üìå DESCRIPTION:
// –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∏–ª–∏ –±–æ–ª–µ–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –≤—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.
//
// –í—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –≤—Ö–æ–¥–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –±—É–¥—É—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.
// –û–±—ä–µ–∫—Ç—ã –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è –≤–º–µ—Å—Ç–µ, —Ç–∞–∫ —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–ª—é—á–µ–π —Å—É–º–º–∏—Ä—É—é—Ç—Å—è.
//
// –ü—Ä–∏–º–µ—Ä:
//
// const objA = { a: 10, b: 20, c: 30 }
// const objB = { a: 3, c: 6, d: 3 }
// combine(objA, objB) // Returns { a: 13, b: 20, c: 36, d: 3 }

// –§—É–Ω–∫—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ–π, –ø–æ—ç—Ç–æ–º—É –Ω–µ –¥–æ–ª–∂–Ω–∞ –∏–∑–º–µ–Ω—è—Ç—å –≤—Ö–æ–¥–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.
//
// ‚úÖ SOLUTTION:
// function combine() {
//     var obj = {}
//
//     for (var i = 0; i < arguments.length; i++) {
//         for (var key in arguments[i]) {
//             obj[key] = obj[key] ? obj[key] + arguments[i][key]: arguments[i][key]
//         }
//     }
//
//     return obj;
// }

function combine(...args) {
  let obj = {};
  for (let i = 0; i < args.length; i++) {
    for (let key in args[i]) {
      if (obj.hasOwnProperty(key)) {
        obj[key] += args[i][key];
      } else {
        obj[key] = args[i][key];
      }
    }
  }
  return obj;
}

const objA = { a: 10, b: 20, c: 30 };
const objB = { a: 3, c: 6, d: 3 };

const obj = combine(objA, objB);
console.log(obj);
