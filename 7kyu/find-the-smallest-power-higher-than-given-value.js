// üìå DESCRIPTION:
// –£ –Ω–∞—Å –µ—Å—Ç—å —á–∏—Å–ª–æ 12385. –ú—ã —Ö–æ—Ç–∏–º —É–∑–Ω–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–µ–≥–æ –∫—É–±–∞, –Ω–æ –±–æ–ª—å—à–µ–≥–æ, —á–µ–º 12385. –û—Ç–≤–µ—Ç –±—É–¥–µ—Ç 13824.
// –£ –Ω–∞—Å –µ—Å—Ç—å —á–∏—Å–ª–æ 1245678. –ú—ã —Ö–æ—Ç–∏–º —É–∑–Ω–∞—Ç—å 5-—é —Å—Ç–µ–ø–µ–Ω—å, –±–ª–∏–∂–∞–π—à—É—é –∏ –±–æ–ª—å—à—É—é, —á–µ–º —ç—Ç–æ —á–∏—Å–ª–æ. –ó–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç 1419857.
//
// –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ(val) –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å—Ç–µ–ø–µ–Ω–∏(pow_) –∏ –≤—ã–≤–æ–¥–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —Ö–æ—Ç–∏–º –Ω–∞–π—Ç–∏.
//
// –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–µ–≤:
//
//  (12385, 3) ==> 13824
//  (1245678, 5) ==> 1419857
//
// –ó–Ω–∞—á–µ–Ω–∏–µ (val) –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, (pow_), –≤—Å–µ–≥–¥–∞ –±–æ–ª—å—à–µ, —á–µ–º 1.
//
//
//‚úÖ SOLUTTION:
function findNextPower(val, pow) {
  let number = +Math.pow(val, 1 / pow).toFixed(3);
  return Number.isInteger(number)
    ? (++number) ** pow
    : Math.ceil(number) ** pow;
}

console.log(findNextPower(8, 3));
